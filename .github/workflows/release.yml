name: Build and Release VSTO Add-in

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2
      
    - name: Restore NuGet packages
      run: nuget restore decksterity.sln
      
    - name: Create temporary certificate for build
      shell: powershell
      run: |
        # Create self-signed certificate for VSTO build requirements
        $cert = New-SelfSignedCertificate -Subject "CN=Decksterity" -CertStoreLocation "Cert:\CurrentUser\My" -KeyUsage DigitalSignature -Type CodeSigning -NotAfter (Get-Date).AddYears(1)
        
        # Export to PFX without password 
        $certBytes = $cert.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pfx)
        [System.IO.File]::WriteAllBytes("decksterity_TemporaryKey.pfx", $certBytes)
        
        # Update project file with certificate thumbprint for build
        $projectContent = Get-Content "decksterity.csproj" -Raw
        $projectContent = $projectContent -replace '<ManifestCertificateThumbprint></ManifestCertificateThumbprint>', "<ManifestCertificateThumbprint>$($cert.Thumbprint)</ManifestCertificateThumbprint>"
        Set-Content "decksterity.csproj" -Value $projectContent -NoNewline
        
        Write-Host "SUCCESS: Build certificate created with thumbprint: $($cert.Thumbprint)" -ForegroundColor Green
        
    - name: Build solution
      run: msbuild decksterity.sln /p:Configuration=Release
      
    - name: Create installer package
      shell: powershell
      run: |
        # Run the installer creation script
        .\CreateInstaller.ps1 -OutputPath "DecksterityInstaller.zip"
        
        # Verify the package was created
        if (Test-Path "DecksterityInstaller.zip") {
          Write-Host "SUCCESS: Installer package created successfully" -ForegroundColor Green
          $size = (Get-Item "DecksterityInstaller.zip").Length / 1MB
          Write-Host "PACKAGE: Package size: $([math]::Round($size, 2)) MB" -ForegroundColor Cyan
        } else {
          Write-Error "ERROR: Failed to create installer package"
          exit 1
        }
        
    - name: Get version info
      id: version
      shell: powershell
      run: |
        # Extract version from assembly or use current date
        if ($env:GITHUB_REF -match 'refs/tags/v(.+)') {
          $version = $matches[1]
        } else {
          $version = Get-Date -Format "yyyy.MM.dd"
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Version: $version" 
        
    - name: Create Release
      shell: powershell
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Set variables
        if ($env:GITHUB_REF -match 'refs/tags/v(.+)') {
          $version = $matches[1]
          $tagName = $env:GITHUB_REF_NAME
        } else {
          $version = "${{ steps.version.outputs.version }}"
          $tagName = "v$version"
        }
        
        $releaseName = "Decksterity v$version"
        
        # Create release body
        $releaseBody = @"
        # Decksterity PowerPoint Add-in v$version
        
        1. Download the ``DecksterityInstaller.zip`` file below
        2. Extract the ZIP file to a folder
        3. Right-click on ``Install.ps1`` and select ``Run with PowerShell``
        4. Follow the installation prompts
        5. Start PowerPoint to use the add-in!
        "@
        
        # Create release using GitHub CLI
        gh release create $tagName DecksterityInstaller.zip --title $releaseName --notes $releaseBody --repo $env:GITHUB_REPOSITORY
        
        Write-Host "SUCCESS: Release created successfully: $releaseName" -ForegroundColor Green