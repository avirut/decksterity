name: Build and Release VSTO Add-in

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2
      
    - name: Restore NuGet packages
      run: nuget restore decksterity.sln
      
    - name: Build solution
      run: msbuild decksterity.sln /p:Configuration=Release
      
    - name: Create installer package
      shell: powershell
      run: |
        # Run the installer creation script
        .\CreateInstaller.ps1 -OutputPath "DecksterityInstaller.zip"
        
        # Verify the package was created
        if (Test-Path "DecksterityInstaller.zip") {
          Write-Host "‚úÖ Installer package created successfully" -ForegroundColor Green
          $size = (Get-Item "DecksterityInstaller.zip").Length / 1MB
          Write-Host "üì¶ Package size: $([math]::Round($size, 2)) MB" -ForegroundColor Cyan
        } else {
          Write-Error "‚ùå Failed to create installer package"
          exit 1
        }
        
    - name: Get version info
      id: version
      shell: powershell
      run: |
        # Extract version from assembly or use current date
        if ($env:GITHUB_REF -match 'refs/tags/v(.+)') {
          $version = $matches[1]
        } else {
          $version = Get-Date -Format "yyyy.MM.dd"
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Version: $version" 
        
    - name: Create Release
      shell: powershell
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Set variables
        if ($env:GITHUB_REF -match 'refs/tags/v(.+)') {
          $version = $matches[1]
          $tagName = $env:GITHUB_REF_NAME
        } else {
          $version = "${{ steps.version.outputs.version }}"
          $tagName = "v$version"
        }
        
        $releaseName = "Decksterity v$version"
        
        # Create release body
        $releaseBody = @"
        # Decksterity PowerPoint Add-in v$version
        
        ## üöÄ Installation
        
        1. **Download** the ``DecksterityInstaller.zip`` file below
        2. **Extract** the ZIP file to a folder
        3. **Right-click** on ``Install.ps1`` and select "Run with PowerShell"
        4. **Follow** the installation prompts
        5. **Start PowerPoint** to use the add-in!
        
        ## ‚ú® Features
        
        - **Harvey Balls**: Progress indicators (0-4 fill levels)
        - **Arrows**: 8-directional arrow symbols  
        - **Icons**: Basic symbols (‚úî, ‚úò, ‚ûï, ‚ûñ, ‚ùì, ‚Ä¶)
        - **Stoplights**: Colored status indicators (red, amber, green)
        - **Layout Tools**: Comprehensive alignment, distribution, and spacing utilities
        
        ## üìã Requirements
        
        - Microsoft PowerPoint 2016 or later
        - .NET Framework 4.7.2 or higher
        - Visual Studio Tools for Office Runtime
        - Windows 10/11
        
        ## üîÑ Updating
        
        To update to a newer version:
        1. Run the uninstaller from the previous installation (if available)
        2. Install the new version following the steps above
        
        ## üêõ Issues
        
        Report issues at: https://github.com/avirut/decksterity/issues
        "@
        
        # Create release using GitHub CLI
        gh release create $tagName DecksterityInstaller.zip `
          --title $releaseName `
          --notes $releaseBody `
          --repo $env:GITHUB_REPOSITORY
        
        Write-Host "‚úÖ Release created successfully: $releaseName" -ForegroundColor Green